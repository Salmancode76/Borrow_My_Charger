<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Search Charge Points</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      background-color: #f8f9fa;
    }

    .card-box {
      background-color: #fff;
      border-radius: 12px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
      padding: 20px;
      margin-bottom: 30px;
    }

    .form-label {
      font-weight: 500;
    }

    .btn-dark {
      border-radius: 6px;
    }

    .charge-card {
      background-color: #fff;
      border-radius: 12px;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
      padding: 15px;
      margin-bottom: 20px;
      height: 100%;
      transition: transform 0.2s, box-shadow 0.2s;
    }

    .charge-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .charge-img {
      width: 100%;
      height: 160px;
      object-fit: cover;
      border-radius: 8px;
      margin-bottom: 15px;
    }

    .card-content p {
      margin-bottom: 10px;
    }

    .row.g-3 {
      margin-bottom: 30px;
    }
    
    #map {
      height: 400px;
      width: 100%;
      border: 2px solid #4CAF50;
      border-radius: 12px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
      margin-bottom: 30px;
    }
    
    .status-available {
      color: #198754;
      font-weight: 600;
    }
    
    .status-unavailable {
      color: #dc3545;
      font-weight: 600;
    }
    
    /* Loading spinner */
    .spinner-border {
      width: 3rem;
      height: 3rem;
    }
    
    .loading-container {
      display: none;
      justify-content: center;
      align-items: center;
      margin-bottom: 20px;
    }

    /* Pagination styles */
    .pagination {
      display: flex;
      justify-content: center;
      margin-top: 20px;
      margin-bottom: 30px;
    }
    
    .page-link {
      color: #212529;
      background-color: #fff;
      border: 1px solid #dee2e6;
      padding: 0.5rem 0.75rem;
      margin: 0 3px;
      border-radius: 4px;
      transition: all 0.2s;
    }
    
    .page-link:hover {
      z-index: 2;
      color: #0a58ca;
      background-color: #e9ecef;
      border-color: #dee2e6;
    }
    
    .page-item.active .page-link {
      z-index: 3;
      color: #fff;
      background-color: #212529;
      border-color: #212529;
    }
    
    .page-item.disabled .page-link {
      color: #6c757d;
      pointer-events: none;
      background-color: #fff;
      border-color: #dee2e6;
    }
  </style>
</head>
<body>
  <div class="container py-5">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
      <h3 class="fw-semibold">üîå Find a Charge Point</h3>
      <a href="user_dashboard.php" class="btn btn-dark">‚Üê Back to Dashboard</a>
    </div>
    <!-- Search Form -->
    <form id="search-form" class="card-box mb-4">
      <div class="row g-3">
        <div class="col-md-4">
          <label class="form-label">Location</label>
          <input type="text" class="form-control" name="location" placeholder="e.g. Manama" id="location" onkeyup="searchChargePoints()">
        </div>

        <div class="col-md-4">
          <label class="form-label">Max Price per KWH</label>
          <input type="number" step="0.01" class="form-control" name="max_price" placeholder="e.g. 0.25" id="max_price" onkeyup="searchChargePoints()">
        </div>

        <div class="col-md-4">
          <label class="form-label">Availability</label>
          <select class="form-select" name="availability" id="availability" onchange="searchChargePoints()">
            <option value="">All</option>
            <option value="available">Available</option>
            <option value="not_available">Not Available</option>
          </select>
        </div>
      </div>
    </form>
    
    <!-- Loading spinner -->
    <div class="loading-container" id="loading">
      <div class="spinner-border text-success" role="status">
        <span class="visually-hidden">Loading...</span>
      </div>
    </div>

    <!-- Map Section -->
    <div id="map" class="mb-4"></div>
    
    <!-- Results Section -->
    <div class="d-flex justify-content-between align-items-center mb-3">
      <h4>Available Charge Points</h4>
      <div>
        <select class="form-select form-select-sm" id="items-per-page" style="width: auto;" onchange="changeItemsPerPage()">
          <option value="3">3 per page</option>
          <option value="6" selected>6 per page</option>
          <option value="9">9 per page</option>
          <option value="12">12 per page</option>
        </select>
      </div>
    </div>

    <!-- Results container -->
    <div class="row" id="results">
      <!-- Filtered charge points will be displayed here -->
      <?php if (isset($chargers) && !empty($chargers)): ?>
        <?php foreach ($chargers as $point): ?>
          <div class="col-md-4 mb-4">
            <div class="charge-card">
              <div class="card-content">
                <img src="/Borrow_My_Charger/images/<?php echo $point['image_url']; ?>" alt="Charging Point" class="charge-img"/>
                <p><strong>Location:</strong> <?= htmlspecialchars($point['Location'] ?? 'Unknown Location') ?></p>
                <p><strong>Price:</strong> <?= htmlspecialchars($point['cost'] ?? 'N/A') ?> BHD</p>
                <p><strong>Status:</strong> 
                  <span class="<?= ($point['availability'] === 'Available') ? 'status-available' : 'status-unavailable' ?>">
                    <?= htmlspecialchars($point['availability'] ?? 'Unknown Status') ?>
                  </span>
                </p>
                <button class="btn btn-dark mt-2 w-100" onclick="bookCharger(<?php echo $point['charger_id'] ?>)">Book Now</button>
              </div>
            </div>
          </div>
        <?php endforeach; ?>
      <?php else: ?>
        <div class="col-12 text-center text-muted">
          <p>Use the filters above to find charge points.</p>
        </div>
      <?php endif; ?>
    </div>
    
    <!-- Pagination Controls -->
    <div class="d-flex justify-content-between align-items-center mt-4">
      <div class="text-muted" id="page-info">
        Showing <span id="showing-start">0</span> to <span id="showing-end">0</span> of <span id="total-items">0</span> charge points
      </div>
      <nav aria-label="Charge points pagination">
        <ul class="pagination" id="pagination">
          <!-- Pagination links will be added by JavaScript -->
        </ul>
      </nav>
    </div>
    
    <!-- Booking Modal -->
    <div class="modal fade" id="bookingModal" tabindex="-1" aria-labelledby="bookingModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="bookingModalLabel">Book a Charging Session</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <div id="booking-error" class="alert alert-danger d-none" role="alert"></div>
            <div id="booking-success" class="alert alert-success d-none" role="alert">
              Booking successful! Your request has been submitted.
            </div>

            <form id="bookingForm">
              <input type="hidden" id="charger_id" name="charger_id">

              <div class="mb-3">
                <label for="booking-date" class="form-label">Date</label>
                <input type="date" class="form-control" id="booking-date" name="booking-date" 
                       min="<?php echo date('Y-m-d'); ?>" required>
              </div>

              <div class="mb-3">
                <label for="booking-time" class="form-label">Time</label>
                <input type="time" class="form-control" id="booking-time" name="booking-time" required>
              </div>

              <div class="mb-3" id="charger-details">
                <!-- Charger details will be loaded here -->
              </div>
            </form>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            <button type="button" class="btn btn-primary" id="submit-booking">Book Now</button>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
let map;
let markers = [];
let currentPage = 1;
let itemsPerPage = 6; // Default: 6 items per page
let allChargers = []; // Store all chargers for pagination

async function LoadMap() {
    let center = await getUserLocation();

    map = new google.maps.Map(document.getElementById("map"), {
        zoom: 10,
        center: center || { lat: 26.0667, lng: 50.5577 }, // Bahrain fallback
    });

    searchChargePoints();  // Load initial chargers
    setInterval(searchChargePoints, 30000);  // Refresh every 30 seconds
}

function searchChargePoints() {
    const location = document.getElementById('location').value;
    const maxPrice = document.getElementById('max_price').value;
    const availability = document.getElementById('availability').value;
    
    // Show loading spinner
    document.getElementById('loading').style.display = 'flex';

    const xhr = new XMLHttpRequest();
    xhr.open("GET", `user-search.php?location=${encodeURIComponent(location)}&max_price=${encodeURIComponent(maxPrice)}&availability=${encodeURIComponent(availability)}`, true);
    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');

    xhr.onload = function() {
        // Hide loading spinner
        document.getElementById('loading').style.display = 'none';
        
        if (xhr.status === 200) {
            try {
                allChargers = JSON.parse(xhr.responseText);
                currentPage = 1; // Reset to first page on new search
                renderCurrentPage();
                updateMapMarkers(allChargers); // Show all markers on map
            } catch (error) {
                console.error("Error parsing JSON:", error);
            }
        }
    };
    xhr.send();
}

function renderCurrentPage() {
    const startIndex = (currentPage - 1) * itemsPerPage;
    const endIndex = Math.min(startIndex + itemsPerPage, allChargers.length);
    const currentPageData = allChargers.slice(startIndex, endIndex);
    
    updateResultsList(currentPageData);
    updatePagination();
}

function updateResultsList(chargers) {
    const resultsDiv = document.getElementById('results');
    resultsDiv.innerHTML = '';

    if (chargers.length === 0) {
        resultsDiv.innerHTML = '<div class="col-12 text-center"><p>No matching chargers found.</p></div>';
        
        document.getElementById('pagination').style.display = 'none';
        document.getElementById('page-info').style.display = 'none';
        return;
    }

    document.getElementById('pagination').style.display = 'flex';
    document.getElementById('page-info').style.display = 'block';

    chargers.forEach(point => {
        var statusClass = point.availability === 'Available' ? 'status-available' : 'status-unavailable';
        var chargerCard = `
            <div class="col-md-4 mb-4">
                <div class="charge-card">
                    <div class="card-content">
                        <img src="/Borrow_My_Charger/${point.image_url}" alt="Charging Point" class="charge-img"/>
                        <p><strong>Location:</strong> ${point.Location || 'Unknown'}</p>
                        <p><strong>Price:</strong> ${point.cost || 'N/A'} BHD</p>
                        <p><strong>Status:</strong> <span class="${statusClass}">${point.availability || 'Unknown'}</span></p>
                        <button class="btn btn-dark mt-2 w-100" onclick="bookCharger(${point.charger_id})">Book Now</button>
                    </div>
                </div>
            </div>
        `;
        resultsDiv.innerHTML += chargerCard;
    });
}

function updatePagination() {
    const paginationElement = document.getElementById('pagination');
    const totalPages = Math.ceil(allChargers.length / itemsPerPage);
    
    const startItem = allChargers.length === 0 ? 0 : (currentPage - 1) * itemsPerPage + 1;
    const endItem = Math.min(currentPage * itemsPerPage, allChargers.length);
    document.getElementById('showing-start').textContent = startItem;
    document.getElementById('showing-end').textContent = endItem;
    document.getElementById('total-items').textContent = allChargers.length;
    
    let paginationHTML = '';
    
    paginationHTML += `
        <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
            <a class="page-link" href="#" onclick="goToPage(${currentPage - 1}); return false;">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>
    `;
    
    const maxVisiblePages = 5;
    let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));
    let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);
    
    // Adjust start page if we're near the end
    if (endPage - startPage + 1 < maxVisiblePages) {
        startPage = Math.max(1, endPage - maxVisiblePages + 1);
    }
    
    if (startPage > 1) {
        paginationHTML += `
            <li class="page-item">
                <a class="page-link" href="#" onclick="goToPage(1); return false;">1</a>
            </li>
        `;
        if (startPage > 2) {
            paginationHTML += `
                <li class="page-item disabled">
                    <a class="page-link" href="#">...</a>
                </li>
            `;
        }
    }
    
    for (let i = startPage; i <= endPage; i++) {
        paginationHTML += `
            <li class="page-item ${i === currentPage ? 'active' : ''}">
                <a class="page-link" href="#" onclick="goToPage(${i}); return false;">${i}</a>
            </li>
        `;
    }
    
    if (endPage < totalPages) {
        if (endPage < totalPages - 1) {
            paginationHTML += `
                <li class="page-item disabled">
                    <a class="page-link" href="#">...</a>
                </li>
            `;
        }
        paginationHTML += `
            <li class="page-item">
                <a class="page-link" href="#" onclick="goToPage(${totalPages}); return false;">${totalPages}</a>
            </li>
        `;
    }
    
    // Next button
    paginationHTML += `
        <li class="page-item ${currentPage === totalPages || totalPages === 0 ? 'disabled' : ''}">
            <a class="page-link" href="#" onclick="goToPage(${currentPage + 1}); return false;">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    `;
    
    paginationElement.innerHTML = paginationHTML;
}

function goToPage(page) {
    if (page < 1 || page > Math.ceil(allChargers.length / itemsPerPage) || page === currentPage) {
        return; 
    }
    
    currentPage = page;
    renderCurrentPage();
    window.scrollTo(0, document.getElementById('results').offsetTop - 20);
    return false;
}

function changeItemsPerPage() {
    itemsPerPage = parseInt(document.getElementById('items-per-page').value);
    currentPage = 1; 
    renderCurrentPage();
}

function updateMapMarkers(chargers) {
    markers.forEach(marker => marker.setMap(null));
    markers = [];

    chargers.forEach(charger => {
        if (!charger.latitude || !charger.longitude) return;

        const marker = new google.maps.Marker({
            map: map,
            position: { lat: parseFloat(charger.latitude), lng: parseFloat(charger.longitude) },
            title: charger.Location || "Charge Point"
        });

        const infoWindow = new google.maps.InfoWindow({
            content: `<strong>${charger.Location || 'Unknown'}</strong><br>Price: ${charger.cost || 'N/A'} BHD`
        });

        marker.addListener('click', () => {
            infoWindow.open(map, marker);
        });

        markers.push(marker);
    });
}

function bookCharger(chargerId) {
  document.getElementById('booking-error').classList.add('d-none');
  document.getElementById('booking-success').classList.add('d-none');
  document.getElementById('bookingForm').reset();
  
  document.getElementById('charger_id').value = chargerId;
  
  fetch(`get_charger_details.php?id=${chargerId}`)
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        const details = `
          <h6>Charging Point Details:</h6>
          <p><strong>Name:</strong> ${data.charger.charge_name}</p>
          <p><strong>Location:</strong> ${data.charger.location || 'Unknown Location'}</p>
          <p><strong>Cost:</strong> ${data.charger.cost} BHD/hour</p>
          <p><strong>Available Hours:</strong> ${data.charger.available_from || '00:00'} - ${data.charger.available_to || '23:59'}</p>
        `;
        document.getElementById('charger-details').innerHTML = details;
        
        // Set time input min/max if available
        const timeInput = document.getElementById('booking-time');
        if (data.charger.available_from) {
          timeInput.min = data.charger.available_from;
        }
        if (data.charger.available_to) {
          timeInput.max = data.charger.available_to;
        }
      }
    })
    .catch(error => {
      console.error('Error fetching charger details:', error);
    });
  
  const bookingModal = new bootstrap.Modal(document.getElementById('bookingModal'));
  bookingModal.show();
}

function getUserLocation() {
    return new Promise((resolve) => {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(
                position => resolve({
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                }),
                error => {
                    console.warn("Location not available:", error.message);
                    resolve(null);
                }
            );
        } else {
            resolve(null);
        }
    });
}

document.addEventListener('DOMContentLoaded', function() {
  document.getElementById('submit-booking').addEventListener('click', function() {
    const form = document.getElementById('bookingForm');
    
    if (!form.checkValidity()) {
      form.reportValidity();
      return;
    }
    
    const chargerId = document.getElementById('charger_id').value;
    const bookingDate = document.getElementById('booking-date').value;
    const bookingTime = document.getElementById('booking-time').value;
    
    // Create the booking datetime string
    const bookingDateTime = `${bookingDate} ${bookingTime}:00`;
    
    fetch('create_booking.php', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        charger_id: chargerId,
        booking_datetime: bookingDateTime
      })
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        // Show success message
        document.getElementById('booking-success').classList.remove('d-none');
        document.getElementById('booking-error').classList.add('d-none');
        
        const formElements = form.elements;
        for (let i = 0; i < formElements.length; i++) {
          formElements[i].disabled = true;
        }
        document.getElementById('submit-booking').disabled = true;
        
        setTimeout(() => {
          bootstrap.Modal.getInstance(document.getElementById('bookingModal')).hide();
          searchChargePoints();
        }, 3000);
      } else {
        // Show error message
        const errorElement = document.getElementById('booking-error');
        errorElement.textContent = data.message || 'An error occurred during booking.';
        errorElement.classList.remove('d-none');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      const errorElement = document.getElementById('booking-error');
      errorElement.textContent = 'Network error. Please try again.';
      errorElement.classList.remove('d-none');
    });
  });
});
  </script>
  
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCf6CIeUcXb6aIJNQO_Wg7idkbqbLRY63A&libraries=maps,marker&callback=LoadMap&loading=async" async defer></script>
</body>
</html>